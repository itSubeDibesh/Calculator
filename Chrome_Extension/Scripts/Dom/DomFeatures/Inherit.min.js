export var Inherit=(BaseClass,...OtherClass)=>{class Base extends BaseClass{constructor(...args){super(...args),OtherClass.forEach(mixin=>{copyProps(this,new mixin)})}}let copyProps=(target,source)=>{Object.getOwnPropertyNames(source).concat(Object.getOwnPropertySymbols(source)).forEach(prop=>{prop.match(/^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/)||Object.defineProperty(target,prop,Object.getOwnPropertyDescriptor(source,prop))})};return OtherClass.forEach(mixin=>{copyProps(Base.prototype,mixin.prototype),copyProps(Base,mixin)}),Base};