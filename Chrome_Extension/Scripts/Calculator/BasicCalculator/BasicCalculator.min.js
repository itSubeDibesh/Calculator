import{DOM,Inherit,Select}from"../../Dom/Dom.min.js";import{EquationSolver}from"../EquationSolver/EquationSolver.min.js";let clicked=!1,clickCount=0,result;export class BasicCalculator extends(Inherit(DOM,EquationSolver)){constructor(calcButtons,addToHistory,copyClipBoard,clearHistory){super(Select),this.calcButtons=calcButtons,this.addToHistory=addToHistory,this.copyClipBoard=copyClipBoard,this.clearHistory=clearHistory,result=(new Select).pick("result")}changeClearButton=()=>{this.pick("SAC").innerText=clicked?"C":"AC"};selectNumbers=()=>{const l=["N0","N1","N2","N3","N4","N5","N6","N7","N8","N9"],commonFactory=(element,e)=>{clicked=!0,this.changeClearButton(),this.insertNumberToResultInput(element,e)},triggerFn=(e,trigger,element)=>{e.key===trigger&&commonFactory(element,e)};this.calcButtons.numberButtons.forEach(element=>{this.pick(element).addEventListener("click",e=>{commonFactory(element,e)})}),addEventListener("keyup",e=>{for(let i=0;i<10;i++)triggerFn(e,`${i}`,l[i])})};insertNumberToResultInput=(element,e)=>{0===clickCount&&0==e.target.innerHTML&&0==result.value[0]?result.value=element.replace("N",""):(0==result.value[0]&&"."!==result.value[1]&&(result.value+=""),clickCount++,result.value+=element.replace("N",""))};implementDots=()=>{const dot=this.calcButtons.superButtons[1],commonFn=()=>{clickCount++,clicked=!0,this.changeClearButton(),result.value.length<=0?(result.value+=0,result.value+=this.pick(dot).innerText):result.value.includes(".")||(result.value+=this.pick(dot).innerText)};this.pick(dot).addEventListener("click",()=>{commonFn()}),addEventListener("keyup",e=>{"."===e.key&&commonFn()})};clearCalculation=()=>{const clear=this.calcButtons.superButtons[0],commonFactory=()=>{clickCount=0,result.value=" ",clicked=!1,this.changeClearButton()};this.pick(clear).addEventListener("click",()=>{commonFactory()}),addEventListener("keyup",e=>{"Backspace"===e.key&&commonFactory()})};implementOperators=()=>{const commonFn=element=>{0==result.value&&"OSUB"==element?result.value=this.pick(element).innerText:0!=result.value||"ODIV"!=element&&"OMUL"!=element?result.value+=this.pick(element).innerText:(result.value=0,result.value+=this.pick(element).innerText)},triggerFactory=(e,trigger,element)=>{e.key===trigger&&commonFn(element)};this.calcButtons.operatorButtons.forEach(element=>{this.pick(element).addEventListener("click",e=>{commonFn(element)})}),addEventListener("keyup",e=>{triggerFactory(e,"+","OSUM"),triggerFactory(e,"-","OSUB"),triggerFactory(e,"*","OMUL"),triggerFactory(e,"/","ODIV"),triggerFactory(e,"%","OMOD")})};calculateResult=()=>{const input=result.value,res=this.calculate(input),diaplay="Input"===res.show?input:res.result;"Success"===res.status&&(this.addToHistory(input,diaplay),this.copyClipBoard(),result.value=diaplay)};implementEqualsTo=()=>{this.pick(this.calcButtons.superButtons[2]).addEventListener("click",e=>{this.calculateResult()}),addEventListener("keyup",e=>{"="!==e.key&&"Enter"!==e.key||this.calculateResult()})}}