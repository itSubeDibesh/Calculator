let error=[];const errorPriority=["Normal","Ignorable","Danger"];export class Debug{debugFactory(type){return function(...args){return type(...args)}}debugType={alert:alert,assert:console.assert,clear:console.clear,confirm:confirm,count:console.count,countReset:console.countReset,debug:console.debug,dir:console.dir,dirxml:console.dirxml,error:console.error,exception:console.exception,group:console.group,groupCollapsed:console.groupCollapsed,groupEnd:console.groupEnd,info:console.info,log:console.log,memory:console.memory,table:console.table,time:console.time,timeEnd:console.timeEnd,timeLog:console.timeLog,timeStamp:console.timeStamp,trace:console.trace,warn:console.warn};error=error;displayError(){const p0=[],p1=[],p2=[];this.error.forEach(el=>{el.errorPriority===this.errorPriority[0]?p0.push(el):el.errorPriority===this.errorPriority[1]?p1.push(el):p2.push(el)}),0!=p0.length?p0.forEach(el=>{this.log(el)}):0!=p1.length?p1.forEach(el=>{this.warn(el)}):p2.forEach(el=>{this.logError(el)})}errorPriority=errorPriority;log=this.debugType.log;clear=this.debugType.clear;warn=this.debugType.warn;logError=this.debugType.error;dir=this.debugType.dir;alert=this.debugType.alert;trace=this.debugType.trace}